alert("–ö—Ä—É—Ç–æ–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —É—Ä–∞ ")
while (true){
    let vibor = prompt(" –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å:\n  1. –°–ª–æ–∂–∏—Ç—å \n  2. –í—ã—á–∏—Ç–∞–Ω–∏–µ \n  3. –£–º–Ω–æ–∂–µ–Ω–∏–µ \n  4. –†–∞–∑–¥–µ–ª–∏—Ç—å \n  5. –í–æ–∑—ã–µ—Å—Ç–∏ –≤ –∫–≤–∞–¥—Ä–∞—Ç \n  6. –ù–∞–π—Ç–∏ –∫–æ—Ä–µ–Ω—å \n  7. –í—ã–π—Ç–∏ ")
    switch (vibor){
        case "1":
            let pervoe = prompt(" –í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ")
            let vtoroe = prompt(" –í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ")
            alert(" –û—Ç–≤–µ—Ç: "+ (parseFloat(pervoe)+ parseFloat(vtoroe)))
            break
        case "2":
            let pervoe1 = prompt(" –í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ")
            let vtoroe1 = prompt(" –í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ")
            alert(" –û—Ç–≤–µ—Ç: "+(parseFloat(pervoe1)- parseFloat(vtoroe1)))
            break
        case "3":
            let pervoe2 = prompt(" –í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ")
            let vtoroe2 = prompt(" –í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ")
            alert(" –û—Ç–≤–µ—Ç: "+(parseFloat(pervoe2)* parseFloat(vtoroe2)))
            break
        case "4":
            let pervoe3 = prompt(" –í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ")
            let vtoroe3 = prompt(" –í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ")
            if (vtoroe3 === "0"){
                alert(" –Ω–µ–ª—å–∑—è –Ω–∞ 0\n –∫—Ä–∏–Ω–∂ üòéüòéüòéüòéüòéüòéüòéüòéüòéüòéüòéüòéüòé")
            }
            else {
                alert(" –û—Ç–≤–µ—Ç: "+(parseFloat(pervoe3)/ parseFloat(vtoroe3)))
            }
            break
        case "5":
            let chiclo = prompt(" –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")
            alert(" –û—Ç–≤–µ—Ç: "+(parseFloat(chiclo)* parseFloat(chiclo)))
            break
        case "6":
            let chiclo1 = prompt(" –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ")
            alert(" –û—Ç–≤–µ—Ç: "+(Math.sqrt(parseFloat(chiclo1))))
            break
        case "7":
            process.exit(0)
            break
        default:
            alert(" –ù—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞ üôÑ")
            break

    }
}